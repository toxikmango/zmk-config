/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/matrix_transform.h>
#define DEFAULT 0
#define LOWER 1
#define UPPER 2
#define BLUETOOTH 3

&kscan0 {
    debounce-period = <50>;
};

	&left_encoder {
		status = "okay";
	};
		
	&right_encoder {
		status = "okay";
	};

/ {
	sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
				&kp ENTER   &kp UP     &mo BLUETOOTH  &mo LOWER
				&kp LEFT    &kp DOWN   &kp RIGHT      &mo UPPER
				&kp SPACE   &kp A      &kp S          &none
				&kp N4      &kp SPACE  &kp DOWN       &none
				&kp N1      &kp N2     &kp N3         &none
			>;
			
			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp PG_UP PG_DN>;
			
		};

		 func_layer_1 {
			 label = "Function";
			
			

			bindings = <
				&kp Z          &kp ENTER        &kp C	       &none
				&kp N1         &kp N2           &kp N3         &none
				&kp N4         &kp DOWN         &kp KP_DOT     &none
				&kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_PLUS    &none
				&kp QUESTION   &kp COLON        &kp DQT        &none
			 >;

			 
		 };
		 
		 func_layer_2 {
			 label = "Function_2";
			
			

			bindings = <
			    &kp Z    &kp X    &kp C		                        &none
				&kp V    &kp B    &kp N                             &none
				&kp M    &kp KP_DIVIDE    &kp KP_DOT                &none
				&kp KP_DIVIDE    &kp KP_MULTIPLY    &kp KP_PLUS     &none
				&kp QUESTION    &kp COLON    &kp DQT                &none
			 >;

			 
		 };
		 
		 func_layer_3 {
			 label = "Function";
			
			

			bindings = <
				&reset           &none          &bootloader     &none
				&out OUT_TOG    &out OUT_USB    &out OUT_BLE    &none
				&bt BT_SEL 0    &bt BT_PRV      &bt BT_NXT      &none
				&bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &none
				&kp C_MUTE      &none           &bt BT_CLR      &none
			 >;

			 
		 };
	};
};
