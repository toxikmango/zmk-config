/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/matrix_transform.h>
#define DEFAULT 0
#define LOWER 1
#define UPPER 2



/ {
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder_1>;
		sensors = <&encoder_2>;
	};

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
				&kp D       &kp F      &kp G        &mo LOWER
				&kp LEFT    &kp DOWN   &kp RIGHT    &mo UPPER
				&kp l   &kp a      &kp s   
				&kp d       &kp f      &kp g   &none
				&kp h       &kp j      &kp k   &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
			sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
		};

		 func_layer_1 {
			 label = "Function";
			
			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

			bindings = <
				&KP             &reset          &bootloader     &none
				&out OUT_TOG    &out OUT_USB    &out OUT_BLE    &none
				&bt BT_SEL 0    &bt BT_PRV      &bt BT_NXT      
				&bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    
				&kp C_MUTE      &none           &none           
			 >;

			 sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
			 sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
		 };
		 
		 func_layer_2 {
			 label = "Function_2";
			
			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
			sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

			bindings = <
			    &KP_Z    &KP_X    &KP_C		&none
				&KP_V    &KP_B    &KP_N     &none
				&KP_M    &kp KP_, &kp KP_.  &none
				&KP_/    &KP_<    &KP_>     &none
				&KP_?    &KP_:    &KP_"     &none
			 >;

			 sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
			 sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
		 };
	};
};
